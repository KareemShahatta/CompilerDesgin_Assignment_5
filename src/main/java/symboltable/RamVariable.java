package symboltable;import syntaxtree.Type;import java.util.HashMap;public class RamVariable {    String id;    Type type;    HashMap<String, Integer> offsets_map = new HashMap<>();    private static int offset_counter = 0;    public RamVariable(String id, Type type)    {        this.id = id;        this.type = type;    }    public void addOffset()    {        if(!offsets_map.containsKey(id))        {            offsets_map.put(id,++offset_counter);        }    }    public int getOffset()    {        return offsets_map.get(id);    }    public String getId() {        return id;    }    public Type type() {        return type;    }        public String toString()     {        if (type instanceof syntaxtree.IdentifierType)            return ((syntaxtree.IdentifierType) type).s + " " + id;        else            return type.getClass() + " " + id;    }} // Variable