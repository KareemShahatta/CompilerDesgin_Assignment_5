package symboltable;import syntaxtree.Type;import java.util.HashMap;public class RamVariable {    String id;    Type type;    HashMap<String, Integer> offsets_map = new HashMap<>();    public static int offset_counter_var = 0;    public static int offset_counter_pram = 0;    private int offset = 0;    public RamVariable(String id, Type type)    {        this.id = id;        this.type = type;    }    public void setVarOffset()    {        offset_counter_var += 4;        offset = offset_counter_var;    }    public void setPramOffset()    {        offset_counter_pram += 4;        offset = offset_counter_pram;    }    public int getOffset()    {        return offset;    }    public String getId() {        return id;    }    public Type type() {        return type;    }        public String toString()     {        if (type instanceof syntaxtree.IdentifierType)            return ((syntaxtree.IdentifierType) type).s + " " + id;        else            return type.getClass() + " " + id;    }} // Variable